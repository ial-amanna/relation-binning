{"ast":null,"code":"var _jsxFileName = \"C:\\\\ra_work\\\\relation-binning\\\\src\\\\components\\\\BinPlot.js\",\n  _s = $RefreshSig$();\nimport React, { useRef, useEffect, useState } from 'react';\nimport * as d3 from 'd3';\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nconst BinPlot = ({\n  data\n}) => {\n  _s();\n  const svgRef = useRef();\n  const [yAxis1, setYAxis1] = useState(\"\");\n  const [yAxis2, setYAxis2] = useState(\"\");\n  const [maxBins, setMaxBins] = useState(5); // Maximum number of bins\n\n  const handleYAxis1Change = event => {\n    setYAxis1(event.target.value);\n  };\n  const handleYAxis2Change = event => {\n    setYAxis2(event.target.value);\n  };\n  useEffect(() => {\n    if (data.length > 0) {\n      if (!yAxis1) {\n        setYAxis1(Object.keys(data[0])[0]);\n      }\n      if (!yAxis2) {\n        setYAxis2(Object.keys(data[0])[1]); // Initialize yAxis2 with another attribute\n      }\n      drawBinPlot();\n    }\n  }, [data, yAxis1, yAxis2, maxBins]);\n  const handleMaxBinsChange = event => {\n    const value = Math.max(1, Math.min(10, +event.target.value));\n    setMaxBins(value);\n  };\n  const drawBinPlot = () => {\n    const svg = d3.select(svgRef.current);\n    svg.selectAll('*').remove();\n    const width = 600;\n    const height = 400;\n    const margin = {\n      top: 20,\n      right: 50,\n      bottom: 50,\n      left: 50\n    };\n    const filteredData = data.filter(d => d[yAxis1] != null && d[yAxis2] != null);\n    if (filteredData.length === 0) {\n      console.log('No valid data points for plotting');\n      return;\n    }\n    const y1 = d3.scaleLinear().domain(d3.extent(filteredData, d => +d[yAxis1])).nice().range([height - margin.bottom, margin.top]);\n    const y2 = d3.scaleLinear().domain(d3.extent(filteredData, d => +d[yAxis2])).nice().range([height - margin.bottom, margin.top]);\n    const x = d3.scalePoint().domain([yAxis1, yAxis2]).range([margin.left, width - margin.right]);\n    const maxBinsClamped = Math.max(1, Math.min(10, maxBins));\n\n    // Drawing bars for y1 axis\n    for (let i = 0; i < maxBinsClamped; i++) {\n      svg.append('rect').attr('x', x(yAxis1) - 10).attr('y', y1(d3.min(filteredData.map(d => +d[yAxis1])))).attr('width', 20).attr('height', y1(d3.max(filteredData.map(d => +d[yAxis1]))) - y1(d3.min(filteredData.map(d => +d[yAxis1])))).attr('fill', 'orange').attr('opacity', 0.6);\n    }\n\n    // Drawing bars for y2 axis based on bin level\n    for (let i = 0; i < maxBinsClamped; i++) {\n      const split = i + 1;\n      const barHeight = (height - margin.bottom - margin.top) / split;\n      for (let j = 0; j < split; j++) {\n        svg.append('rect').attr('x', x(yAxis2) - 10).attr('y', margin.top + j * barHeight).attr('width', 20).attr('height', barHeight).attr('fill', 'steelblue').attr('opacity', 0.6);\n      }\n    }\n\n    // Draw y1 and y2 axes\n    svg.append('g').attr('transform', `translate(${x(yAxis1)},0)`).call(d3.axisLeft(y1));\n    svg.append('g').attr('transform', `translate(${x(yAxis2)},0)`).call(d3.axisRight(y2));\n  };\n  return /*#__PURE__*/_jsxDEV(\"div\", {\n    children: /*#__PURE__*/_jsxDEV(\"div\", {\n      className: \"bg-blue-100 w-1/2 text-sm\",\n      children: [/*#__PURE__*/_jsxDEV(\"svg\", {\n        ref: svgRef,\n        width: 600,\n        height: 400\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 109,\n        columnNumber: 17\n      }, this), \" \", /*#__PURE__*/_jsxDEV(\"label\", {\n        htmlFor: \"yAxis1\",\n        children: \"Y Axis 1:\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 111,\n        columnNumber: 17\n      }, this), /*#__PURE__*/_jsxDEV(\"select\", {\n        id: \"yAxis1\",\n        value: yAxis1,\n        onChange: handleYAxis1Change,\n        children: data[0] && Object.keys(data[0]).map(key => /*#__PURE__*/_jsxDEV(\"option\", {\n          value: key,\n          children: key\n        }, key, false, {\n          fileName: _jsxFileName,\n          lineNumber: 114,\n          columnNumber: 25\n        }, this))\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 112,\n        columnNumber: 17\n      }, this), /*#__PURE__*/_jsxDEV(\"label\", {\n        htmlFor: \"yAxis2\",\n        children: \"Y Axis 2:\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 118,\n        columnNumber: 17\n      }, this), /*#__PURE__*/_jsxDEV(\"select\", {\n        id: \"yAxis2\",\n        value: yAxis2,\n        onChange: handleYAxis2Change,\n        children: data[0] && Object.keys(data[0]).map(key => /*#__PURE__*/_jsxDEV(\"option\", {\n          value: key,\n          children: key\n        }, key, false, {\n          fileName: _jsxFileName,\n          lineNumber: 121,\n          columnNumber: 25\n        }, this))\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 119,\n        columnNumber: 17\n      }, this), /*#__PURE__*/_jsxDEV(\"label\", {\n        children: [\"Max Bins:\", /*#__PURE__*/_jsxDEV(\"input\", {\n          type: \"number\",\n          value: maxBins,\n          onChange: handleMaxBinsChange,\n          min: \"2\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 127,\n          columnNumber: 21\n        }, this)]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 125,\n        columnNumber: 17\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 108,\n      columnNumber: 13\n    }, this)\n  }, void 0, false, {\n    fileName: _jsxFileName,\n    lineNumber: 107,\n    columnNumber: 9\n  }, this);\n};\n_s(BinPlot, \"OsVo1te/nS3JVR0kaA2O+qneSUg=\");\n_c = BinPlot;\nexport default BinPlot;\nvar _c;\n$RefreshReg$(_c, \"BinPlot\");","map":{"version":3,"names":["React","useRef","useEffect","useState","d3","jsxDEV","_jsxDEV","BinPlot","data","_s","svgRef","yAxis1","setYAxis1","yAxis2","setYAxis2","maxBins","setMaxBins","handleYAxis1Change","event","target","value","handleYAxis2Change","length","Object","keys","drawBinPlot","handleMaxBinsChange","Math","max","min","svg","select","current","selectAll","remove","width","height","margin","top","right","bottom","left","filteredData","filter","d","console","log","y1","scaleLinear","domain","extent","nice","range","y2","x","scalePoint","maxBinsClamped","i","append","attr","map","split","barHeight","j","call","axisLeft","axisRight","children","className","ref","fileName","_jsxFileName","lineNumber","columnNumber","htmlFor","id","onChange","key","type","_c","$RefreshReg$"],"sources":["C:/ra_work/relation-binning/src/components/BinPlot.js"],"sourcesContent":["import React, { useRef, useEffect, useState } from 'react';\r\nimport * as d3 from 'd3';\r\n\r\n\r\nconst BinPlot = ({ data }) => {\r\n    const svgRef = useRef();\r\n    const [yAxis1, setYAxis1] = useState(\"\");\r\n    const [yAxis2, setYAxis2] = useState(\"\");\r\n    const [maxBins, setMaxBins] = useState(5); // Maximum number of bins\r\n\r\n    const handleYAxis1Change = (event) => {\r\n        setYAxis1(event.target.value);\r\n    };\r\n\r\n    const handleYAxis2Change = (event) => {\r\n        setYAxis2(event.target.value);\r\n    };\r\n\r\n\r\n\r\n    useEffect(() => {\r\n        if (data.length > 0) {\r\n            if (!yAxis1) {\r\n                setYAxis1(Object.keys(data[0])[0]);\r\n            }\r\n            if (!yAxis2) {\r\n                setYAxis2(Object.keys(data[0])[1]); // Initialize yAxis2 with another attribute\r\n            }\r\n            drawBinPlot();\r\n        }\r\n    }, [data, yAxis1, yAxis2, maxBins]);\r\n\r\n\r\n    const handleMaxBinsChange = (event) => {\r\n        const value = Math.max(1, Math.min(10, +event.target.value));\r\n        setMaxBins(value);\r\n    };\r\n    \r\n\r\n    const drawBinPlot = () => {\r\n        const svg = d3.select(svgRef.current);\r\n        svg.selectAll('*').remove();\r\n    \r\n        const width = 600;\r\n        const height = 400;\r\n        const margin = { top: 20, right: 50, bottom: 50, left: 50 };\r\n    \r\n        const filteredData = data.filter(d => d[yAxis1] != null && d[yAxis2] != null);\r\n    \r\n        if (filteredData.length === 0) {\r\n            console.log('No valid data points for plotting');\r\n            return;\r\n        }\r\n    \r\n        const y1 = d3.scaleLinear()\r\n            .domain(d3.extent(filteredData, d => +d[yAxis1])).nice()\r\n            .range([height - margin.bottom, margin.top]);\r\n    \r\n        const y2 = d3.scaleLinear()\r\n            .domain(d3.extent(filteredData, d => +d[yAxis2])).nice()\r\n            .range([height - margin.bottom, margin.top]);\r\n    \r\n        const x = d3.scalePoint()\r\n            .domain([yAxis1, yAxis2])\r\n            .range([margin.left, width - margin.right]);\r\n    \r\n        const maxBinsClamped = Math.max(1, Math.min(10, maxBins));\r\n    \r\n        // Drawing bars for y1 axis\r\n        for (let i = 0; i < maxBinsClamped; i++) {\r\n            svg.append('rect')\r\n                .attr('x', x(yAxis1) - 10)\r\n                .attr('y', y1(d3.min(filteredData.map(d => +d[yAxis1]))))\r\n                .attr('width', 20)\r\n                .attr('height', y1(d3.max(filteredData.map(d => +d[yAxis1]))) - y1(d3.min(filteredData.map(d => +d[yAxis1]))))\r\n                .attr('fill', 'orange')\r\n                .attr('opacity', 0.6);\r\n        }\r\n    \r\n        // Drawing bars for y2 axis based on bin level\r\n        for (let i = 0; i < maxBinsClamped; i++) {\r\n            const split = i + 1;\r\n            const barHeight = (height - margin.bottom - margin.top) / split;\r\n    \r\n            for (let j = 0; j < split; j++) {\r\n                svg.append('rect')\r\n                    .attr('x', x(yAxis2) - 10)\r\n                    .attr('y', margin.top + j * barHeight)\r\n                    .attr('width', 20)\r\n                    .attr('height', barHeight)\r\n                    .attr('fill', 'steelblue')\r\n                    .attr('opacity', 0.6);\r\n            }\r\n        }\r\n    \r\n        // Draw y1 and y2 axes\r\n        svg.append('g')\r\n            .attr('transform', `translate(${x(yAxis1)},0)`)\r\n            .call(d3.axisLeft(y1));\r\n    \r\n        svg.append('g')\r\n            .attr('transform', `translate(${x(yAxis2)},0)`)\r\n            .call(d3.axisRight(y2));\r\n    };\r\n        \r\n    return (\r\n        <div>\r\n            <div className='bg-blue-100 w-1/2 text-sm'>\r\n                <svg ref={svgRef} width={600} height={400}></svg> {/* Adjusted SVG size */}\r\n    \r\n                <label htmlFor=\"yAxis1\">Y Axis 1:</label>\r\n                <select id=\"yAxis1\" value={yAxis1} onChange={handleYAxis1Change}>\r\n                    {data[0] && Object.keys(data[0]).map(key => (\r\n                        <option key={key} value={key}>{key}</option>\r\n                    ))}\r\n                </select>\r\n    \r\n                <label htmlFor=\"yAxis2\">Y Axis 2:</label>\r\n                <select id=\"yAxis2\" value={yAxis2} onChange={handleYAxis2Change}>\r\n                    {data[0] && Object.keys(data[0]).map(key => (\r\n                        <option key={key} value={key}>{key}</option>\r\n                    ))}\r\n                </select>\r\n    \r\n                <label>\r\n                    Max Bins:\r\n                    <input type=\"number\" value={maxBins} onChange={handleMaxBinsChange} min=\"2\" />\r\n                </label>\r\n            </div>\r\n        </div>\r\n    );\r\n}\r\nexport default BinPlot;\r\n\r\n      \r\n        "],"mappings":"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","ignoreList":[]},"metadata":{},"sourceType":"module","externalDependencies":[]}